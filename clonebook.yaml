- hosts: localhost
  become: yes
  become_user: root
  name: "Cluster clone testing"
  tasks:
    - name: "Ensure clone is not present"
      cluster_clone:
        state: absent
        resource_name: myhanaresource
      register: resultobj
    - name: "Ensure clone is not present: Output"
      debug:
        msg: '{{ resultobj }}'

    - name: "Ensure hana resource exists"
      cluster_resource:
        state: present
        name: myhanaresource
        resource_type: SAPHanaTopology
        options: |
          SID=mysid1233456 InstanceNumber=123412224 op start timeout=600 op stop timeout=300 op monitor interval=10 timeout=600
      register: resultobj
    - name: "Ensure hana resource exists: Output"
      debug:
        msg: '{{ resultobj }}'

    - name: "Make hana resource clone"
      cluster_clone:
        state: present
        resource_name: myhanaresource
        options: |
          clone-max=2 clone-node-max=1 interleave=true
      register: resultobj
    - name: "Make hana resource clone: Output"
      debug:
        msg: '{{ resultobj }}'
    
    - name: "Modify the hana clone"
      cluster_clone:
        state: present
        resource_name: myhanaresource
        options: |
          clone-max=2 clone-node-max=1 interleave=true notify=true
      register: resultobj
    - name: "Modify the hana clone: Output"
      debug:
        msg: '{{ resultobj }}'
    
    - name: "Ensure hana clone idempotence"
      cluster_clone:
        state: present
        resource_name: myhanaresource
        options: |
          clone-max=2 clone-node-max=1 interleave=true notify=true
      register: resultobj
    - name: "Ensure hana clone idempotence: Output"
      debug:
        msg: '{{ resultobj }}'
    
    - name: "Remove nonexistent clone"
      cluster_clone:
        state: absent
        resource_name: myfakeresource
        options: |
          clone-max=2 clone-node-max=1 interleave=true notify=true
      register: resultobj
    - name: "Remove nonexistent clone: Output"
      debug:
        msg: '{{ resultobj }}'
    
    
    - name: "Ensure promotable is not present"
      cluster_clone:
        state: absent
        resource_name: mypromotableclone
      register: resultobj
    - name: "Ensure promotable is not present: Output"
      debug:
        msg: '{{ resultobj }}'

    - name: "Ensure resource to promote exists"
      cluster_resource:
        state: present
        name: mypromotableclone
        resource_type: SAPHanaTopology
        options: |
          SID=mysid1233456 InstanceNumber=123412224 op start timeout=600 op stop timeout=300 op monitor interval=10 timeout=600
      register: resultobj
    - name: "Ensure resource to promote exists: Output"
      debug:
        msg: '{{ resultobj }}'

    - name: "Make hana promotable clone"
      cluster_clone:
        state: present
        resource_name: mypromotableclone
        clone_type: promotable
        options: |
          clone-max=2 clone-node-max=1 interleave=true
      register: resultobj
    - name: "Make hana promotable clone: Output"
      debug:
        msg: '{{ resultobj }}'
    
    - name: "Modify the hana promotable"
      cluster_clone:
        state: present
        resource_name: mypromotableclone
        clone_type: promotable
        options: |
          clone-max=2 clone-node-max=1 interleave=true notify=true
      register: resultobj
    - name: "Modify the hana promotable: Output"
      debug:
        msg: '{{ resultobj }}'
    
    - name: "Ensure hana clone idempotence"
      cluster_clone:
        state: present
        resource_name: mypromotableclone
        clone_type: promotable
        options: |
          clone-max=2 clone-node-max=1 interleave=true notify=true
      register: resultobj
    - name: "Ensure hana clone idempotence: Output"
      debug:
        msg: '{{ resultobj }}'
    
    - name: "Unpromote the clone"
      cluster_clone:
        state: present
        resource_name: mypromotableclone
        options: |
          clone-max=2 clone-node-max=1 interleave=true notify=true
      register: resultobj
    - name: "Unpromote the clone: Output"
      debug:
        msg: '{{ resultobj }}'
    
    - name: "Repromote the clone again"
      cluster_clone:
        state: present
        resource_name: mypromotableclone
        clone_type: promotable
        options: |
          clone-max=2 clone-node-max=1 interleave=true notify=true
      register: resultobj
    - name: "Repromote the clone again: Output"
      debug:
        msg: '{{ resultobj }}'