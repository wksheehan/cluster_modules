
- hosts: localhost
  become: yes
  become_user: root
  name: "Cluster property testing"
  tasks:
    - name: "Ensure cluster properties are unset"
      cluster_property:
        state: absent
        name: "{{ item.name }}"
        value: "{{ item.value }}"
      loop:
        - { name: 'stonith-enabled', value: true }
        - { name: 'concurrent-fencing', value: true }
        - { name: 'stonith-timeout', value: '900' }
        - { name: 'stonith-action', value: 'reboot' }
      register: resultobj
    - name: Dump the result object
      debug:
        msg: '{{ resultobj }}'

    - name: "Ensure unset idempotence"
      cluster_property:
        state: absent
        name: "{{ item.name }}"
        value: "{{ item.value }}"
      loop:
        - { name: 'stonith-enabled', value: true }
        - { name: 'concurrent-fencing', value: true }
        - { name: 'stonith-timeout', value: '900' }
        - { name: 'stonith-action', value: 'reboot' }
      register: resultobj
    - name: Dump the result object
      debug:
        msg: '{{ resultobj }}'

    - name: "Set cluster properties"
      cluster_property:
        state: present
        name: "{{ item.name }}"
        value: "{{ item.value }}"
      loop:
        - { name: 'stonith-enabled', value: true }
        - { name: 'concurrent-fencing', value: true }
        - { name: 'stonith-timeout', value: '900' }
        - { name: 'stonith-action', value: 'reboot' }
      register: resultobj
    - name: Dump the result object
      debug:
        msg: '{{ resultobj }}'

    - name: "Ensure idempotence"
      cluster_property:
        state: present
        name: "{{ item.name }}"
        value: "{{ item.value }}"
      loop:
        - { name: 'stonith-enabled', value: true }
        - { name: 'concurrent-fencing', value: true }
        - { name: 'stonith-timeout', value: '900' }
        - { name: 'stonith-action', value: 'reboot' }
      register: resultobj
    - name: Dump the result object
      debug:
        msg: '{{ resultobj }}'

    - name: "Modify cluster properties"
      cluster_property:
        state: present
        name: "{{ item.name }}"
        value: "{{ item.value }}"
      loop:
        - { name: 'stonith-enabled', value: false }
        - { name: 'concurrent-fencing', value: false }
        - { name: 'stonith-timeout', value: '901' }
        - { name: 'stonith-action', value: 'reboot' }
      register: resultobj
    - name: Dump the result object
      debug:
        msg: '{{ resultobj }}'