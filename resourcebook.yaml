
- hosts: localhost
  become: yes
  become_user: root
  name: "Cluster resource testing"
  tasks:
    - name: "Ensure cluster resource is absent"
      cluster_resource:
        state: absent
        name: mytestresource
        resource_class: ocf
        resource_provider: heartbeat
        resource_type: IPaddr2
        options: |
          ip=1.1.1.1/2
          op monitor interval=10s
      register: resultobj
    - name: Dump the result object
      debug:
        msg: '{{ resultobj }}'

    - name: "Create cluster resource"
      cluster_resource:
        state: present
        name: mytestresource
        resource_class: ocf
        resource_provider: heartbeat
        resource_type: IPaddr2
        options: |
          ip=1.1.1.1/2
          op monitor interval=10s
      register: resultobj
    - name: Dump the result object
      debug:
        msg: '{{ resultobj }}'

    - name: "Ensure idempotence"
      cluster_resource:
        state: present
        name: mytestresource
        resource_class: ocf
        resource_provider: heartbeat
        resource_type: IPaddr2
        options: |
          ip=1.1.1.1/2
          op monitor interval=10s
      register: resultobj
    - name: Dump the result object
      debug:
        msg: '{{ resultobj }}'

    - name: "Modify the resource"
      cluster_resource:
        state: present
        name: mytestresource
        resource_class: ocf
        resource_provider: heartbeat
        resource_type: IPaddr2
        options: |
          ip=2.2.2.2/2
          op monitor interval=30s
      register: resultobj
    - name: Dump the result object
      debug:
        msg: '{{ resultobj }}'

    - name: "Try removing nonexistent resource"
      cluster_resource:
        state: absent
        name: idontexist
        resource_class: ocf
        resource_provider: heartbeat
        resource_type: IPaddr2
        options: |
          ip=1.1.1.1/2
          op monitor interval=10s
      register: resultobj
    - name: Dump the result object
      debug:
        msg: '{{ resultobj }}'

    - name: "Create hana resource"
      cluster_resource:
        state: present
        name: myhanaresource
        resource_type: SAPHanaTopology
        options: |
          SID=mysid1233456 InstanceNumber=123412224 op start timeout=600 op stop timeout=300 op monitor interval=10 timeout=600
      register: resultobj
    - name: Dump the result object
      debug:
        msg: '{{ resultobj }}'
    
    - name: "Ensure hana resource idempotence"
      cluster_resource:
        state: present
        name: myhanaresource
        resource_type: SAPHanaTopology
        options: |
          SID=mysid1233456 InstanceNumber=123412224 op start timeout=600 op stop timeout=300 op monitor interval=10 timeout=600
      register: resultobj
    - name: Dump the result object
      debug:
        msg: '{{ resultobj }}'

    - name: "Try to make hana resource a clone"
      cluster_resource:
        state: present
        name: myhanaresource
        resource_type: SAPHanaTopology
        options: |
          SID=mysid1233456 InstanceNumber=123412224 op start timeout=600 op stop timeout=300 op monitor interval=10 timeout=600 clone clone-max=2 clone-node-max=1 interleave=true
      register: resultobj
    - name: Dump the result object
      debug:
        msg: '{{ resultobj }}'
    
    - name: "Ensure hana clone idempotence"
      cluster_resource:
        state: present
        name: myhanaresource
        resource_type: SAPHanaTopology
        options: |
          SID=mysid1233456 InstanceNumber=123412224 op start timeout=600 op stop timeout=300 op monitor interval=10 timeout=600 clone clone-max=2 clone-node-max=1 interleave=true
      register: resultobj
    - name: Dump the result object
      debug:
        msg: '{{ resultobj }}'
      