
- hosts: localhost
  become: yes
  become_user: root
  name: "Cluster resource defaults testing"
  tasks:
    - name: "Ensure cluster defaults are unset"
      cluster_defaults:
        state: absent
        name: "{{ item.name }}"
        defaults_type: "{{ item.dtype }}"
      loop:
        - { name: 'resource-stickiness', dtype: 'rsc'}
        - { name: 'migration-threshold', dtype: 'rsc' }
        - { name: 'record-pending', dtype: 'op' }
      register: resultobj
    - name: "Ensure cluster defaults are unset: Output"
      debug:
        msg: '{{ resultobj }}'

    - name: "Ensure unset idempotence"
      cluster_defaults:
        state: absent
        name: "{{ item.name }}"
        defaults_type: "{{ item.dtype }}"
      loop:
        - { name: 'resource-stickiness', dtype: 'rsc'}
        - { name: 'migration-threshold', dtype: 'rsc' }
        - { name: 'record-pending', dtype: 'op' }
      register: resultobj
    - name: "Ensure unset idempotence: Output"
      debug:
        msg: '{{ resultobj }}'

    - name: "Set cluster defaults"
      cluster_defaults:
        state: present
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        defaults_type: "{{ item.dtype }}"
      loop:
        - { name: 'resource-stickiness', dtype: 'rsc', value: '1099' }
        - { name: 'migration-threshold', dtype: 'rsc', value: '5099' }
        - { name: 'record-pending', dtype: 'op', value: false }
      register: resultobj
    - name: "Set cluster defaults: Output"
      debug:
        msg: '{{ resultobj }}'

    - name: "Ensure idempotence"
      cluster_defaults:
        state: present
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        defaults_type: "{{ item.dtype }}"
      loop:
        - { name: 'resource-stickiness', dtype: 'rsc', value: '1099' }
        - { name: 'migration-threshold', dtype: 'rsc', value: '5099' }
        - { name: 'record-pending', dtype: 'op', value: false }
      register: resultobj
    - name: "Ensure idempotence: Output"
      debug:
        msg: '{{ resultobj }}'

    - name: "Modify cluster defaults"
      cluster_defaults:
        state: present
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        defaults_type: "{{ item.dtype }}"
      loop:
        - { name: 'resource-stickiness', dtype: 'rsc', value: '1000' }
        - { name: 'migration-threshold', dtype: 'rsc', value: '5000' }
        - { name: 'record-pending', dtype: 'op', value: true }
      register: resultobj
    - name: "Modify cluster defaults: Output"
      debug:
        msg: '{{ resultobj }}'