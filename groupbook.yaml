- hosts: localhost
  become: yes
  become_user: root
  name: "Cluster resource testing"
  tasks:
    - name: "Create cluster resource 1"
      cluster_resource:
        state: present
        name: mygroupresource1
        resource_class: ocf
        resource_provider: heartbeat
        resource_type: IPaddr2
        options: |
          ip=1.1.1.1
          op monitor interval=10s
      register: resultobj
    - name: Dump the result object
      debug:
        msg: '{{ resultobj }}'
    
    - name: "Ensure cluster resource 1 idempotence"
      cluster_resource:
        state: present
        name: mygroupresource1
        resource_class: ocf
        resource_provider: heartbeat
        resource_type: IPaddr2
        options: |
          ip=1.1.1.1
          op monitor interval=10s
      register: resultobj
    - name: Dump the result object
      debug:
        msg: '{{ resultobj }}'
    
    - name: "Create cluster resource 2"
      cluster_resource:
        state: present
        name: mygroupresource2
        resource_class: ocf
        resource_provider: heartbeat
        resource_type: IPaddr2
        options: |
          ip=1.1.1.2
          op monitor interval=10s
      register: resultobj
    - name: Dump the result object
      debug:
        msg: '{{ resultobj }}'
    
    - name: "Create cluster resource 3"
      cluster_resource:
        state: present
        name: mygroupresource3
        resource_class: ocf
        resource_provider: heartbeat
        resource_type: IPaddr2
        options: |
          ip=1.1.1.3
          op monitor interval=10s
      register: resultobj
    - name: Dump the result object
      debug:
        msg: '{{ resultobj }}'
    
    - name: "Ensure group does not exist"
      cluster_group:
        state: absent
        name: mygroup
      register: resultobj
    - name: Dump the result object
      debug:
        msg: '{{ resultobj }}'
    
    - name: "Create new resource group with all three resources"
      cluster_group:
        state: present
        name: mygroup
        resources: mygroupresource1 mygroupresource2 mygroupresource3
      register: resultobj
    - name: Dump the result object
      debug:
        msg: '{{ resultobj }}'
    
    - name: "Ensure idempotence"
      cluster_group:
        state: present
        name: mygroup
        resources: mygroupresource1 mygroupresource2 mygroupresource3
      register: resultobj
    - name: Dump the result object
      debug:
        msg: '{{ resultobj }}'
      
    - name: "Ensure cluster resource 1 idempotence after adding to group"
      cluster_resource:
        state: present
        name: mygroupresource1
        resource_class: ocf
        resource_provider: heartbeat
        resource_type: IPaddr2
        options: |
          ip=1.1.1.1
          op monitor interval=10s
      register: resultobj
    - name: Dump the result object
      debug:
        msg: '{{ resultobj }}'
    
    - name: "Rearrange group"
      cluster_group:
        state: present
        name: mygroup
        resources: mygroupresource2 mygroupresource1 mygroupresource3
      register: resultobj
    - name: Dump the result object
      debug:
        msg: '{{ resultobj }}'
    
    - name: "Remove resources"
      cluster_group:
        state: present
        name: mygroup
        resources: mygroupresource1
      register: resultobj
    - name: Dump the result object
      debug:
        msg: '{{ resultobj }}'
    
    - name: "Add resources back"
      cluster_group:
        state: present
        name: mygroup
        resources: mygroupresource2 mygroupresource1 mygroupresource3
      register: resultobj
    - name: Dump the result object
      debug:
        msg: '{{ resultobj }}'
